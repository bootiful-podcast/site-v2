name: Deploy
env:
  GCLOUD_SA_KEY: ${{ secrets.GCLOUD_SA_KEY }}
  GCLOUD_PROJECT: joshlong
  NS_NAME: bootiful-podcast
  GKE_CLUSTER: joshlong
  GCLOUD_ZONE: "us-east4"
  
on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build Container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup PATH"
        run: |
          P="${GITHUB_WORKSPACE}/bin"
          mkdir -p $P
          echo "${P}" >> $GITHUB_PATH

      - uses: actions/setup-node@v4
        with:
          node-version: '21.x'


      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER  }}'
          location: '${{ env.GCLOUD_ZONE }}'

      - run: |
          gcloud config set project $GCLOUD_PROJECT 
          gcloud --quiet auth configure-docker
          gcloud auth configure-docker us-docker.pkg.dev --quiet
          kubectl get pods

      - name: Set up Carvel Tools
        run: |
          curl -L https://carvel.dev/install.sh | bash
          export PATH="$PATH:/usr/local/bin"
          ytt version
      
      - name: Publish Container
        run: |
          export PATH=$GITHUB_WORKSPACE/bin/:$PATH
          mkdir -p $GITHUB_WORKSPACE/bin/
          (curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.29.0/pack-v0.29.0-linux.tgz" | sudo tar -C  $GITHUB_WORKSPACE/bin/ --no-same-owner -xzv pack)
          export APP_NAME=bootiful-podcast-client
          export IMAGE_NAME="us-docker.pkg.dev/${GCLOUD_PROJECT}/bootiful-podcast-artifact-registry/${APP_NAME}:latest"
          export ROOT_DIR=$GITHUB_WORKSPACE 
          $ROOT_DIR/.github/workflows/build_container.sh




      - name: Deploy
        run: |
          cd $GITHUB_WORKSPACE
          export ROOT_DIR=$GITHUB_WORKSPACE
          kubectl get ns/$NS_NAME || kubectl create ns $NS_NAME 
          kubectl config set-context --current --namespace=$NS_NAME
          kubectl config view --minify | grep namespace: && echo "found the namespace.."
          $ROOT_DIR/.github/workflows/deploy.sh
